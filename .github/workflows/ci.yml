name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'
      
      - name: Ensure pnpm available via corepack
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install frontend deps
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: frontend
        run: pnpm build

      - name: Sync frontend build into backend static
        run: |
          rm -rf backend/src/static && mkdir -p backend/src/static
          cp -r frontend/dist/* backend/src/static/

      - name: Setup uv
        uses: astral-sh/setup-uv@v3

      - name: Cache uv virtualenv
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/pyproject.toml', 'backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install backend deps
        working-directory: backend
        run: uv sync --all-groups

      - name: Run backend tests
        working-directory: backend
        env:
          SERO_SECURITY__SECRET_KEY: ci-test-secret-key
          SERO_DB__FILEPATH: ${{ runner.temp }}/sero.sqlite
          SERO_LOG__FILEPATH: ${{ runner.temp }}/sero_logs/app.jsonl
          SERO_PROCESSING__DIRPATH: ${{ runner.temp }}/sero_output
        run: uv run pytest -q
